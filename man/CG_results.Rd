% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/CG_results.R
\name{CG_results}
\alias{CG_results}
\title{Case Study: Copula-Graphic Estimator applied to Melanoma data}
\usage{
CG_results(
  sample_data = NA,
  data_path = NA,
  tau = 0.5,
  error_A = 1e-06,
  error_B = 1e-05,
  k = NA,
  p_1 = NA,
  t_grid = NA
)
}
\arguments{
\item{sample_data}{Competing risk data. If \code{NA} is passed, the function will
load data from the \code{data_path} or use the package data \code{Melanoma}.}

\item{data_path}{Path to file with competing risk data. If \code{NA} is passed as input
argument for \code{sample_data}, the function will use the \code{load_data} function to load
the competing risk data from \code{data_path}. If \code{NA} is passed as input argument for
\code{data_path}, the package data \code{Melanoma} is loaded.}

\item{tau}{Kendall's \eqn{\tau}. This parameter is used to specify Kendall's \eqn{\tau}
for the copulas that are used to calculate the Copula-Graphic estimator.}

\item{error_A}{Error tolerance for the first iteration step. The estimate for
\eqn{G(t[i])} is accepted if \eqn{|mu_C(A(t[i])) -k(t[i])| <} \code{error_A}.}

\item{error_B}{Error tolerance for the second iteration step. The estimated
pair \eqn{(F(t[i]), G(t[i]))} is accepted if
\eqn{|mu_C(B_t[i])) - p_1(t[i])| <} \code{error_B}.}

\item{k}{Empirical estimate est \eqn{k(t[i])} for \eqn{P(X > t[i], Y > t[i])}.
See documentaion of function \link[copulagraphicr]{estimate_quantities}. If \code{NA} is passed,
the function \code{estimate_quantities}is called to calculate \code{k}.}

\item{p_1}{Empirical estimate est \eqn{p_1(t[i])} for \eqn{P(X \le t[i], \delta = 1)}.
See documentation of function \link[copulagraphicr]{estimate_quantities}. If \code{NA} is passed,
the function \code{estimate_quantities}is called to calculate \code{p_1}.}

\item{t_grid}{Time grid of consisting of the unique event times \eqn{T}.}
}
\description{
Case Study: Copula-Graphic Estimator applied to Melanoma data
}
\examples{
## use existing data from the einvironment as input data
# CG_results(sample_data = sample_data, load_data = TRUE, data_path = NA)

## use package data as input data
# CG_results(sample_data = NA, load_data = TRUE, data_path = NA)

## load data from data_path -> pass input for data_path
# CG_results(sample_data = NA, load_data = TRUE, data_path = data_path)
}
